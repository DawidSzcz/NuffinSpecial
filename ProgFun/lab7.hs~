import Data.Char

print_board [] False = putStr "Wybierz wiersz, lub zero zeby skonczyc ture\n"
print_board [] True = putStr "Tk wygląda plansza po ruchu komputera\n"
print_board (x:xs) comp = putChar (intToDigit x) >> putStr ": " >> print_stars x >> print_board xs comp

print_stars 0 = putChar '\n'
print_stars n = putChar '*' >> print_stars (n-1) 

empty [] = True
empty (0:xs) = empty xs
empty _ = False

start board = player_turn board 

player_turn board 
	| empty board 	 = putStr "Wygrałeś"
	| True		 = do{
				print "Tura gracza";
				print_board board False;
				getChar >>= \c -> p_turn c board False
			}

p_turn c board move_made
	| digitToInt c == 0 && move_made 	= comp_turn board
	| digitToInt c == 0 			= putStr "\nNie wykonano ruchu" >> 
				  		  getChar >>= 
				  		  \c -> p_turn c board move_made
	| is_valid (digitToInt c) board 	= putStr "\nUsunales gwiazdke z " >> 
				  		  putChar c >>
						  putStr " wiersza. Co robisz dalej" >>
						  getChar >>=
						  \c -> p_turn c (make_move c board) True
	| True		 			= putStr "\nBledny ruch. Jeszcze raz." >> 
						  getChar >>= 
						  \c -> p_turn c board move_made 


is_valid _ [] = False
is_valid i (x:xs)
	| i < 0 		= False
	| i == 1 && x==0  	= False
	| i == 1		= True
	| True			= is_valid (i-1) xs

make_move 1 (x:xs) = (x-1):xs
make_move i (x:xs) = x:make_move (i-1) xs

comp_turn board
	| empty board = printStr "Przegrałeś"
	| True 	      = print_board (comp_turn board) True >> player_turn (comp_turn board)

comp_turn (0:xs) = 0:(comp_turn xs)
comp_turn (x:xs) = (x-1):xs 

